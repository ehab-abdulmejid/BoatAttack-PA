# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
#steps.deployment.outputs.page_url
jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.html_preview.outputs.url }}
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unity stuff
        id: testRunner
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          testMode: editmode
    #  - name: Upload artifcats    
    #    uses: actions/upload-artifact@v3
    #    if: always()
    #    with:
    #      name: Test results
    #      path: ${{ steps.testRunner.outputs.artifactsPath }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Report Artifact
          path: './TestResults'

     # - name: Download Artifacts
     #   uses: actions/download-artifact@v3
     #   with:
     #     name: Report Artifact
     #     path: './TestResults'

      - name: Replace file in index.html
        uses: bluwy/substitute-string-action@v1
        with:
          _input-file: 'TestResults/Doc.html'
          _output-file: 'TestResults/TestDocs.html'

      - name: HTML Preview
        id: html_preview
        uses: pavi2410/html-preview-action@v2
        with:
          html_file: 'TestResults/TestDocs.html'

    #  - name: Setup Pages
    #    uses: actions/configure-pages@v3
        
    #  - name: Fix permissions
    #    run: |
    #      chmod -c -R +rX "_site/" | while read line; do
    #        echo "::warning title=Invalid file permissions automatically fixed::$line"
    #      done

    #  - name: Upload artifact
    #    uses: actions/upload-pages-artifact@v2
    #    with:
          # Upload entire repository
    #      path: './TestResults'
          
    #  - name: Deploy to GitHub Pages
    #    id: deployment
    #    uses: actions/deploy-pages@v2
    
      #- name: Deploy
      #  id: html_preview
      #  uses: JamesIves/github-pages-deploy-action@v4
      #  with:
      #   folder: TestResults # The folder the action should deploy.